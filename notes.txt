// Pratical Design Patterns in Javascript By Jonathan Mills

//////////////////////// Types of Patterns ////////////////////////
/*
Creational                    Structural                Behaviour
(1) Constructor               (1) Decorator             (1) Command
(2) Module                    (2) Facade                (2) Mediator
(3) Factory                   (3) Flyweight             (3) Observer
(4) Singleton
*/


////////////////////////////////////////////////////////////////////

// Creating a new Object 
// (1) Just use the curly braces
// var obj = {};

// (2) Using Object.create
// var nextObj = Object.create(Object.prototype); 

// (3) Use the new keyword
// var lastObj = new Object(); 

////////////////////////////////////////////////////////////////////

// Assigning Keys and Values 

// (1) Dot Notation 
/*
var obj = {};
obj.param = 'New Value'; 
display(obj.param); 
*/
// (2) Square Bracket Notation 
/*
var obj = {};
obj['param'] = 'New Value'; 
display(obj['param']); 
display(obj.param);
// Dot Notation and Bracket Notation can use interchangable
*/

// one advantage of bracket notation 
// bracket notation with variables 
/*
var obj = {};
var val = 'value'; 
obj[val] = 'New Value';
display(obj[val]);
*/

Defining Properties 
ECMAScript 5 introduces defineProperty

Object.defineProperty(obj, 'name', {
	value:'My Value', 
	writable : true,
	enumerable : true,
	configurable : true
})